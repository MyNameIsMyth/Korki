document.addEventListener('DOMContentLoaded', function() {
    console.log('applications.js –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const isAuthenticated = localStorage.getItem('isAuthenticated');
    const userData = localStorage.getItem('user');
    
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', { isAuthenticated, userData });
    
    if (!isAuthenticated || isAuthenticated !== 'true' || !userData) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ login.html');
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É');
        window.location.href = 'login.html';
        return;
    }

    let user;
    try {
        user = JSON.parse(userData);
        console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ user data:', error);
        localStorage.removeItem('user');
        localStorage.removeItem('isAuthenticated');
        window.location.href = 'login.html';
        return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    updateNavigation(user);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    initializeApplications();
});

function updateNavigation(user) {
    console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
    
    const nav = document.querySelector('.nav-list');
    if (!nav) {
        console.log('–ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }

    // –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const loginBtn = nav.querySelector('a[href="login.html"]');
    const registerBtn = nav.querySelector('a[href="register.html"]');
    
    if (loginBtn) {
        console.log('–£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞');
        loginBtn.remove();
    }
    if (registerBtn) {
        console.log('–£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
        registerBtn.remove();
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userInfo = document.createElement('li');
    userInfo.innerHTML = `
        <div style="display: flex; align-items: center; gap: 1rem; flex-wrap: wrap;">
            <span style="color: var(--cream); font-weight: 500;">${user.full_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</span>
            <a href="create-application.html" class="nav-link">–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</a>
            <a href="#" class="nav-link nav-button" id="logoutBtn">–í—ã–π—Ç–∏</a>
        </div>
    `;
    nav.appendChild(userInfo);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
    document.getElementById('logoutBtn').addEventListener('click', function(e) {
        e.preventDefault();
        logout();
    });
}

function logout() {
    console.log('–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    localStorage.removeItem('user');
    localStorage.removeItem('isAuthenticated');
    window.location.href = '../index.html';
}

function initializeApplications() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞—è–≤–æ–∫');
    
    // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–æ–∫
    const applications = [
        {
            id: 1,
            courseName: "Digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥",
            startDate: "2024-01-15",
            paymentMethod: "bank_card",
            status: "completed",
            hasReview: true,
            review: {
                rating: 5,
                text: "–û—Ç–ª–∏—á–Ω—ã–π –∫—É—Ä—Å! –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞. –ü–æ–ª—É—á–∏–ª –º–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–∑—É –ø—Ä–∏–º–µ–Ω–∏–ª –≤ —Ä–∞–±–æ—Ç–µ. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –∫–µ–π—Å—ã –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É.",
                date: "2024-04-20"
            },
            createdAt: "2024-01-10"
        },
        {
            id: 2,
            courseName: "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", 
            startDate: "2024-03-01",
            paymentMethod: "electronic_wallet",
            status: "approved",
            hasReview: false,
            createdAt: "2024-02-20"
        },
        {
            id: 3,
            courseName: "Data Science",
            startDate: "2024-04-20",
            paymentMethod: "bank_transfer",
            status: "pending",
            hasReview: false,
            createdAt: "2024-03-15"
        },
        {
            id: 4,
            courseName: "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω",
            startDate: "2024-05-15",
            paymentMethod: "cash",
            status: "completed",
            hasReview: false,
            createdAt: "2024-04-10"
        }
    ];

    renderApplications(applications);
    setupEventListeners();
}

function renderApplications(applications) {
    const applicationsList = document.getElementById('applicationsList');
    if (!applicationsList) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç applicationsList –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    if (applications.length === 0) {
        applicationsList.innerHTML = `
            <div class="empty-state">
                <div class="empty-state-icon">üìù</div>
                <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫</h3>
                <p>–ü–æ–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–Ω–∏—è–º!</p>
                <a href="create-application.html" class="button button-primary">
                    üìã –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                </a>
            </div>
        `;
        return;
    }

    applicationsList.innerHTML = applications.map(app => `
        <div class="application-card" data-application-id="${app.id}">
            <div class="application-header">
                <div class="application-info">
                    <h3 class="application-title">${app.courseName}</h3>
                    <div class="application-details">
                        <div class="application-detail">
                            <span class="detail-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</span>
                            <span class="detail-value">${formatDate(app.startDate)}</span>
                        </div>
                        <div class="application-detail">
                            <span class="detail-label">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</span>
                            <span class="detail-value">${getPaymentMethodText(app.paymentMethod)}</span>
                        </div>
                        <div class="application-detail">
                            <span class="detail-label">–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏</span>
                            <span class="detail-value">${formatDate(app.createdAt)}</span>
                        </div>
                    </div>
                </div>
                <span class="application-status status-${app.status}">
                    ${getStatusText(app.status)}
                </span>
            </div>

            ${app.hasReview ? `
                <div class="application-review">
                    <div class="review-header">
                        <div class="review-rating">${'‚òÖ'.repeat(app.review.rating)}${'‚òÜ'.repeat(5 - app.review.rating)}</div>
                        <span class="review-date">${formatDate(app.review.date)}</span>
                    </div>
                    <p class="review-text">${app.review.text}</p>
                </div>
            ` : `
                <div class="no-review">
                    <p>üìù –û—Ç–∑—ã–≤ –µ—â–µ –Ω–µ –æ—Å—Ç–∞–≤–ª–µ–Ω</p>
                </div>
            `}

            <div class="application-actions">
                <div class="action-buttons">
                    ${app.status === 'completed' && !app.hasReview ? 
                        `<button class="button button-primary" onclick="openReviewModal(${app.id})">
                            ‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                        </button>` : 
                        ''
                    }
                    ${app.status === 'completed' && app.hasReview ? 
                        `<button class="button button-secondary" disabled>
                            ‚úÖ –û—Ç–∑—ã–≤ –æ—Å—Ç–∞–≤–ª–µ–Ω
                        </button>` : 
                        ''
                    }
                    ${app.status !== 'completed' ? 
                        `<button class="button button-secondary" disabled>
                            ‚è≥ –û—Ç–∑—ã–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                        </button>` : 
                        ''
                    }
                </div>
            </div>
        </div>
    `).join('');
}

function getStatusText(status) {
    const statusMap = {
        'pending': '‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏',
        'approved': '‚úÖ –û–¥–æ–±—Ä–µ–Ω–∞', 
        'rejected': '‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∞',
        'completed': 'üéì –ó–∞–≤–µ—Ä—à–µ–Ω–∞'
    };
    return statusMap[status] || status;
}

function getPaymentMethodText(method) {
    const methodMap = {
        'cash': 'üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏',
        'phone_transfer': 'üì± –ü–µ—Ä–µ–≤–æ–¥ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É',
        'bank_card': 'üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞',
        'electronic_wallet': 'üëõ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫',
        'bank_transfer': 'üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥'
    };
    return methodMap[method] || method;
}

function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric'
    });
}

function setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–æ–≤
    const modal = document.getElementById('reviewModal');
    const modalClose = document.getElementById('modalClose');
    const cancelReview = document.getElementById('cancelReview');
    const reviewForm = document.getElementById('reviewForm');
    const stars = document.querySelectorAll('.star');
    const reviewText = document.getElementById('reviewText');
    const charCount = document.getElementById('charCount');

    if (modalClose) {
        modalClose.addEventListener('click', function() {
            closeModal();
        });
    }

    if (cancelReview) {
        cancelReview.addEventListener('click', function() {
            closeModal();
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    if (modal) {
        modal.addEventListener('click', function(event) {
            if (event.target === modal) {
                closeModal();
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–≤–µ–∑–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞
    if (stars.length > 0) {
        stars.forEach(star => {
            star.addEventListener('click', function() {
                const rating = parseInt(this.getAttribute('data-rating'));
                setRating(rating);
            });
        });
    }

    // –°—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –æ—Ç–∑—ã–≤–∞
    if (reviewText && charCount) {
        reviewText.addEventListener('input', function() {
            const count = this.value.length;
            charCount.textContent = count;
            
            if (count > 450) {
                charCount.parentElement.className = 'char-counter error';
            } else if (count > 400) {
                charCount.parentElement.className = 'char-counter warning';
            } else {
                charCount.parentElement.className = 'char-counter';
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
    if (reviewForm) {
        reviewForm.addEventListener('submit', function(e) {
            e.preventDefault();
            submitReview();
        });
    }
}

let currentApplicationId = null;
let currentRating = 0;

function openReviewModal(applicationId) {
    currentApplicationId = applicationId;
    const modal = document.getElementById('reviewModal');
    const application = getApplicationById(applicationId);
    
    if (application && modal) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.querySelector('.modal-header h3').textContent = `–û—Ç–∑—ã–≤: ${application.courseName}`;
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        resetReviewForm();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }
}

function closeModal() {
    const modal = document.getElementById('reviewModal');
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
        resetReviewForm();
    }
}

function resetReviewForm() {
    const reviewForm = document.getElementById('reviewForm');
    const stars = document.querySelectorAll('.star');
    const charCount = document.getElementById('charCount');
    
    if (reviewForm) {
        reviewForm.reset();
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    currentRating = 0;
    stars.forEach(star => star.classList.remove('active'));
    document.getElementById('reviewRating').value = '';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–∏–º–≤–æ–ª–æ–≤
    if (charCount) {
        charCount.textContent = '0';
        charCount.parentElement.className = 'char-counter';
    }
}

function setRating(rating) {
    const stars = document.querySelectorAll('.star');
    currentRating = rating;
    
    stars.forEach((star, index) => {
        if (index < rating) {
            star.classList.add('active');
        } else {
            star.classList.remove('active');
        }
    });
    
    document.getElementById('reviewRating').value = rating;
}

function getApplicationById(applicationId) {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
    // –î–ª—è –¥–µ–º–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    return null;
}

function submitReview() {
    const rating = currentRating;
    const reviewText = document.getElementById('reviewText').value.trim();
    
    if (!rating) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É –∫—É—Ä—Å—É', 'error');
        return;
    }
    
    if (!reviewText) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞', 'error');
        return;
    }
    
    if (reviewText.length < 10) {
        showNotification('–û—Ç–∑—ã–≤ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤', 'error');
        return;
    }
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã fetch –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞:', {
        applicationId: currentApplicationId,
        rating: rating,
        text: reviewText
    });
    
    // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    showNotification('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.', 'success');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        closeModal();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
        const applications = document.querySelectorAll('.application-card');
        applications.forEach(card => {
            if (parseInt(card.dataset.applicationId) === currentApplicationId) {
                const actionsContainer = card.querySelector('.application-actions');
                if (actionsContainer) {
                    actionsContainer.innerHTML = `
                        <div class="action-buttons">
                            <button class="button button-secondary" disabled>
                                ‚úÖ –û—Ç–∑—ã–≤ –æ—Å—Ç–∞–≤–ª–µ–Ω
                            </button>
                        </div>
                    `;
                }
                
                const reviewContainer = card.querySelector('.no-review');
                if (reviewContainer) {
                    reviewContainer.outerHTML = `
                        <div class="application-review">
                            <div class="review-header">
                                <div class="review-rating">${'‚òÖ'.repeat(rating)}${'‚òÜ'.repeat(5 - rating)}</div>
                                <span class="review-date">${formatDate(new Date().toISOString())}</span>
                            </div>
                            <p class="review-text">${reviewText}</p>
                        </div>
                    `;
                }
            }
        });
    }, 1500);
}

function showNotification(message, type) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const existingNotification = document.querySelector('.notification');
    if (existingNotification) {
        existingNotification.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        if (notification.parentNode) {
            notification.remove();
        }
    }, 4000);
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.openReviewModal = openReviewModal;
window.closeModal = closeModal;